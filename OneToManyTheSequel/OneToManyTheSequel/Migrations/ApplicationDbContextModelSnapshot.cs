// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OneToManyTheSequel;

#nullable disable

namespace OneToManyTheSequel.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OneToManyTheSequel.Domain.Bear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BearName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZooId")
                        .HasColumnType("int");

                    b.Property<int>("ZooKeeperId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZooId");

                    b.HasIndex("ZooKeeperId");

                    b.ToTable("Bears");
                });

            modelBuilder.Entity("OneToManyTheSequel.Domain.Bird", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BirdName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZooId")
                        .HasColumnType("int");

                    b.Property<int>("ZooKeeperId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZooId");

                    b.HasIndex("ZooKeeperId");

                    b.ToTable("Birds");
                });

            modelBuilder.Entity("OneToManyTheSequel.Domain.Zoo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LocationOfZoo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfZoo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zoos");
                });

            modelBuilder.Entity("OneToManyTheSequel.Domain.ZooKeeper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameOfZooKeeper")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ZooKeepers");
                });

            modelBuilder.Entity("OneToManyTheSequel.Domain.Bear", b =>
                {
                    b.HasOne("OneToManyTheSequel.Domain.Zoo", "Zoo")
                        .WithMany("Bears")
                        .HasForeignKey("ZooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneToManyTheSequel.Domain.ZooKeeper", "ZooKeeper")
                        .WithMany("Bears")
                        .HasForeignKey("ZooKeeperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zoo");

                    b.Navigation("ZooKeeper");
                });

            modelBuilder.Entity("OneToManyTheSequel.Domain.Bird", b =>
                {
                    b.HasOne("OneToManyTheSequel.Domain.Zoo", "Zoo")
                        .WithMany("Birds")
                        .HasForeignKey("ZooId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OneToManyTheSequel.Domain.ZooKeeper", "ZooKeeper")
                        .WithMany("Birds")
                        .HasForeignKey("ZooKeeperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zoo");

                    b.Navigation("ZooKeeper");
                });

            modelBuilder.Entity("OneToManyTheSequel.Domain.Zoo", b =>
                {
                    b.Navigation("Bears");

                    b.Navigation("Birds");
                });

            modelBuilder.Entity("OneToManyTheSequel.Domain.ZooKeeper", b =>
                {
                    b.Navigation("Bears");

                    b.Navigation("Birds");
                });
#pragma warning restore 612, 618
        }
    }
}
